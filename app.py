import streamlit as st
import random

def telegram_data():
    params = st.query_params
    return {
        'name': params.get("name", ["Anonymous"]),
        'id': params.get("id", ["None"])
    }

def initialize_game():
    st.session_state.game = {
        'field': [[None for _ in range(5)] for _ in range(5)],
        'mines': set(),
        'opened': set(),
        'bet': 0,
        'multiplier': 1.0,
        'game_active': False,
        'first_move': True,
        'game_over': False,
        'mine_position': None,
        'revealed': False
    }

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'balance' not in st.session_state:
    st.session_state.balance = 0
    st.session_state.show_topup = False  # –ö–æ–Ω—Ç—Ä–æ–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è

if 'game' not in st.session_state:
    initialize_game()

st.set_page_config(
    page_title="Star Mines",
    page_icon="üí£",
)

st.markdown("""
<style>
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è */
    .minefield-button>button {
        width: 60px !important;
        height: 60px !important;
        margin: 0 auto;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        border-radius: 8px !important;
        border: 2px solid #4a4a4a !important;
        padding: 0 !important;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —è—á–µ–µ–∫ */
    .cell-content {
        width: 60px;
        height: 60px;
        margin: 0 auto;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        border-radius: 8px;
        border: 2px solid #4a4a4a;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π —è—á–µ–µ–∫ */
    .mine-cell {
        background-color: #ffcccc !important;
    }
    .safe-cell {
        background-color: #ccffcc !important;
    }
    
    /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
    .big-font {
        font-size: 24px !important;
        text-align: center;
    }
    .game-over {
        color: red;
        font-size: 24px;
        font-weight: bold;
        text-align: center;
    }
    .centered {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .balance-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .topup-form {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 15px;
        margin-top: 10px;
    }
</style>
""", unsafe_allow_html=True)

def topup_balance(amount):
    st.session_state.balance += amount
    st.session_state.show_topup = False
    st.rerun()

def start_game():
    if st.session_state.balance < st.session_state.game['bet']:
        st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!")
        return
    
    mines = set()
    while len(mines) < 12:
        mine = (random.randint(0,4), random.randint(0,4))
        mines.add(mine)
    
    st.session_state.game.update({
        'mines': mines,
        'opened': set(),
        'multiplier': 1.0,
        'game_active': True,
        'first_move': True,
        'game_over': False,
        'mine_position': None,
        'revealed': False
    })
    st.session_state.balance -= st.session_state.game['bet']
    st.rerun()

def open_cell(row, col):
    if st.session_state.game['first_move']:
        st.session_state.game['first_move'] = False
    
    if (row, col) in st.session_state.game['mines']:
        st.session_state.game['game_over'] = True
        st.session_state.game['mine_position'] = (row, col)
        reveal_all_cells()
    else:
        st.session_state.game['opened'].add((row, col))
        st.session_state.game['multiplier'] = round(st.session_state.game['multiplier'] * 1.2, 1)

def reveal_all_cells():
    st.session_state.game['revealed'] = True

def cash_out():
    win = int(st.session_state.game['bet'] * st.session_state.game['multiplier'])
    st.session_state.balance += win
    st.success(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ {win} ‚≠êÔ∏è")
    initialize_game()
    st.rerun()

def continue_after_mine():
    initialize_game()
    st.rerun()

st.title("üåü Star Mines üí£")

user_data = telegram_data()

with st.container():
    cols = st.columns([4, 1])
    with cols[0]:
        st.subheader(f"@{user_data["name"]}")

with st.container():
    cols = st.columns([4, 1])
    with cols[0]:
        st.subheader(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {st.session_state.balance} ‚≠êÔ∏è", divider="rainbow")
    with cols[1]:
        if st.session_state.balance > 0 and not st.session_state.game['game_active']:
            if st.button("‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å", key="topup_btn"):
                st.session_state.show_topup = True
                st.rerun()

# –§–æ—Ä–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
if st.session_state.get('show_topup', False):
    with st.form("topup_form", clear_on_submit=True):
        st.markdown('<div class="topup-form">', unsafe_allow_html=True)
        amount = st.number_input(
            "–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (‚≠êÔ∏è)",
            min_value=10,
            step=5,
            key="topup_amount"
        )
        col1, col2 = st.columns(2)
        with col1:
            if st.form_submit_button("–ü–æ–ø–æ–ª–Ω–∏—Ç—å"):
                topup_balance(amount)
        with col2:
            if st.form_submit_button("–û—Ç–º–µ–Ω–∞"):
                st.session_state.show_topup = False
                st.rerun()
        st.markdown('</div>', unsafe_allow_html=True)

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω—É–ª–µ–≤–æ–º –±–∞–ª–∞–Ω—Å–µ)
if st.session_state.balance == 0 and not st.session_state.game['game_active']:
    if st.button("‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", key="initial_topup"):
        st.session_state.show_topup = True
        st.rerun()

# –ë–ª–æ–∫ —Å—Ç–∞–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω)
MIN_BET = 10
if st.session_state.balance >= MIN_BET and not st.session_state.game['game_active']:
    with st.expander("üõéÔ∏è –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", expanded=True):
        bet = st.number_input(
            "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ (‚≠êÔ∏è)",
            min_value=MIN_BET,
            max_value=st.session_state.balance,
            step=5,
            key="bet_input"
        )
        st.session_state.game['bet'] = bet
        if st.button("üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", key="start_game"):
            start_game()
elif st.session_state.balance < MIN_BET and st.session_state.balance > 0 and not st.session_state.game['game_active']:
    st.markdown('<p class="game-over">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–∏ ( 10 ‚≠êÔ∏è)</p>', unsafe_allow_html=True)

# –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
if st.session_state.game['game_active']:
    st.write(f"üî• –¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: {st.session_state.game['multiplier']:.1f}x")
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—è
    with st.container():
        col1, col2, col3 = st.columns([1, 3, 1])
        with col2:
            for row in range(5):
                cols = st.columns(5, gap="small")
                for col in range(5):
                    with cols[col]:
                        if st.session_state.game['revealed']:
                            if (row, col) in st.session_state.game['mines']:
                                if (row, col) == st.session_state.game['mine_position']:
                                    st.markdown(
                                        '<div class="cell-content mine-cell">üí£</div>', 
                                        unsafe_allow_html=True
                                    )
                                else:
                                    st.markdown(
                                        '<div class="cell-content mine-cell">üí•</div>', 
                                        unsafe_allow_html=True
                                    )
                            elif (row, col) in st.session_state.game['opened']:
                                st.markdown(
                                    '<div class="cell-content safe-cell">üí∞</div>', 
                                    unsafe_allow_html=True
                                )
                            else:
                                st.markdown(
                                    '<div class="cell-content">üü¶</div>', 
                                    unsafe_allow_html=True
                                )
                        elif st.session_state.game['game_over'] and (row, col) == st.session_state.game['mine_position']:
                            st.markdown(
                                '<div class="cell-content mine-cell">üí£</div>', 
                                unsafe_allow_html=True
                            )
                        elif (row, col) in st.session_state.game['opened']:
                            st.markdown(
                                '<div class="cell-content safe-cell">üí∞</div>', 
                                unsafe_allow_html=True
                            )
                        else:
                            st.button(
                                "üü¶",
                                key=f"cell_{row}_{col}",
                                on_click=open_cell, 
                                args=(row, col),
                                help="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–ª–µ—Ç–∫—É"
                            )
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if st.session_state.game['game_over']:
        st.markdown('<p class="game-over">–í—ã –Ω–∞—à–ª–∏ –º–∏–Ω—É! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞</p>', unsafe_allow_html=True)
        if st.button("üîÑ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", type="primary", key="continue"):
            continue_after_mine()
    elif not st.session_state.game['first_move']:
        if st.button("üè¶ –ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à", type="primary", key="cash_out"):
            cash_out()

# –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
with st.expander("üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"):
    st.write("""
    1. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 10 ‚≠êÔ∏è
    2. –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–ª–µ—Ç–∫–∏ –Ω–∞ –ø–æ–ª–µ 5x5
    3. –í –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–∫–∞—Ö –º–Ω–æ–∂–∏—Ç–µ–ª—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 20%
    4. –ü—Ä–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –º–∏–Ω—ã - –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
    5. –ú–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ö–æ–¥–∞
    6. üí£ - –Ω–∞–π–¥–µ–Ω–Ω–∞—è –º–∏–Ω–∞
    7. üí• - –¥—Ä—É–≥–∏–µ –º–∏–Ω—ã –Ω–∞ –ø–æ–ª–µ
    8. üí∞ - –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–ª–µ—Ç–∫–∏
    9. üü¶ - –Ω–µ–æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–ª–µ—Ç–∫–∏
    """)
with st.expander("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"):
    st.write(f"""
    üí¨ –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ:\n
    https://t.me/AppYourSiteBot/id=\n\n
    ‚úÖ –ò –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n
    """)